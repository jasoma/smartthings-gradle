import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'maven'
    id 'signing'
    id 'com.github.tkruse.groovysh' version '1.0.8'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

group 'com.github.jasoma'
version '1.0.0'

sourceCompatibility = 1.8

mainClassName = 'com.github.jasoma.stsync.cli.Main'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile localGroovy()
    compile gradleApi()

    compile 'org.jsoup:jsoup:1.8.3'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3'
    testRuntime "cglib:cglib-nodep:3.1"
    testRuntime "org.objenesis:objenesis:2.1"
}

shadowJar {
    archiveName = 'st-sync-cli.jar'
    exclude 'com.github.jasoma.stsync.gradle.*'
    exclude 'org.gradle.*'
}

test {
    testLogging.events 'passed', 'skipped', 'failed'
    testLogging.exceptionFormat = 'full'
    testLogging.showStandardStreams = true

    exclude '**/integration/*'
}

task cleanTestApps(type: Delete) {
    delete 'build/tmp/SyncTestApp'
    delete 'build/tmp/SyncTestDevice'
}

task integration(type: Test, dependsOn: ['shadowJar', 'cleanTestApps']) {
    testLogging.events 'passed', 'skipped', 'failed'
    testLogging.exceptionFormat = 'full'
    testLogging.showStandardStreams = true

    include '**/integration/*'
    environment(
            username: project.property('smartthings.username'),
            password: project.property('smartthings.password'),
            'stsync.jar': shadowJar.archivePath)
}

processResources {
    filter(ReplaceTokens, tokens: [version: project.version])
}

build.dependsOn << integration

def publishUrl() {
    if (project.version.endsWith('SNAPSHOT')) {
        'https://oss.sonatype.org/content/repositories/snapshots'
    } else {
        'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    }
}

task docJar(type: Jar, dependsOn: 'groovydoc') {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives docJar, sourceJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }
            repository(url: publishUrl()) {
                authentication(userName: project.property('ossrhUser'), password: project.property('ossrhPassword'))
            }
            pom.project {
                name 'SmartThings Gradle'
                description 'Gradle plugin for local authoring of SmartThings projects'
                url 'https://github.com/jasoma/smartthings-gradle'
                scm {
                    connection 'scm:git:https://github.com/jasoma/smartthings-gradle.git'
                    developerConnection 'scm:git:git@github.com:jasoma/smartthings-gradle.git'
                    url 'https://github.com/jasoma/smartthings-gradle.git'
                }
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'jmaher'
                        name 'Jason Maher'
                        email 'jason@jasonmaher.me'
                    }
                }
            }
        }
    }
}

task release(dependsOn: ['build', 'uploadArchives'])
